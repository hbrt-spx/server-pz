// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String       @id @default(uuid())
  name         String
  email        String    @unique
  password     String
  projects     Project[] @relation("ProjectMember")
  tasks        Task[]  @relation("TaskUser")
  createdProjects Project[] @relation("ProjectCreator")
  adminProjects Project[] @relation("ProjectAdmin")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime @updatedAt
}

model Project {
  id           String       @id @default(uuid())
  name         String
  description  String?
  members      User[] @relation("ProjectMember")
  tasks        Task[]  @relation("TaskProject")
  creatorId    String
  creator      User   @relation("ProjectCreator", fields: [creatorId], references: [id])
  adminId      String
  admin        User   @relation("ProjectAdmin", fields: [adminId], references: [id])
  createdAt    DateTime  @default(now())
  updatedAt    DateTime @updatedAt
}

model Task {
  id           String       @id @default(uuid())
  title       String
  description    String?
  status       Status
  userId String
  user  User   @relation("TaskUser", fields: [userId], references: [id])
  projectId    String
  project      Project   @relation("TaskProject",fields: [projectId], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime @updatedAt
}

enum Status {
  PENDENTE
  EM_PROGRESSO
  CONCLUIDA
}
